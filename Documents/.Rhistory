"30% Holdout", "50% Holdout", "Resubstitution",
"Partial CV", "Partial Holdout", "Partial Resubstitution")) +
ylab("Area Under the ROC Curve")
library(dplyr)
library(ggplot2)
library(knitr)
library(survival)
library(ggkm)
library(tidyr)
opts_chunk$set(echo = FALSE, message = FALSE, error = FALSE, warning = FALSE)
knit_hooks$set(plot = function(x, options) {
if ('tikz' %in% options$dev && !options$external) {
hook_plot_tex(x, options)
} else hook_plot_md(x, options)
})
ggplot(subset(cvlong, stat == "OR"), aes(y = value, x = scen)) + geom_violin(fill = "grey60") +
theme_bw(base_size = 13, base_family = "serif") + coord_flip() +
scale_x_discrete("Estimation Approach", labels = c("Bootstrap", "Leave 10 out CV", "Leave 100 out CV", "Pre-validation",
"30% Holdout", "50% Holdout", "Resubstitution",
"Partial CV", "Partial Holdout", "Partial Resubstitution")) +
ylab("Odds Ratio")
labs <- c(boot = "Bootstrap", cv.10 = "Leave 10 out CV", cv.100 = "Leave 100 out CV",
cv.preval = "Pre-validation",
holdout.3 = "30% Holdout", holdout.5 = "50% Holdout", naive = "Resubstitution",
zhu.cv = "Partial CV", zhu.hold = "Partial Holdout", zhu.hold2 = "Partial Resubstitution")
cvlong$Approach <- labs[cvlong$scen]
cvlong %>% group_by(Approach, scen) %>%
summarize(`mean` = mean(value), `std.dev` = sd(value), `Percent bias` = 100 * (mean(value) - ifelse(scen == "AUC", .5, 1))/.5)
cvlong$Approach <- labs[cvlong$scen]
cvlong %>% group_by(Approach, scen) %>%
summarize(`mean` = mean(value), `std.dev` = sd(value), `Percent bias` = 100 * (mean(value) -.5)/.5)
cvlong %>% group_by(Approach, stat) %>%
summarize(`mean` = mean(value), `std.dev` = sd(value), `Percent bias` = 100 * (mean(value) -.5)/.5)
cvlong %>% group_by(stat, Approach) %>%
summarize(`mean` = mean(value), `std.dev` = sd(value), `Percent bias` = 100 * (mean(value) - ifelse(stat == "AUC", .5, 1))/.5)
cvlong$Truth <- ifelse(cvlong$stat == "AUC", .5, 1.0)
cvlong %>% group_by(stat, Approach) %>%
summarize(`mean` = mean(value), `std.dev` = sd(value), `Percent bias` = 100 * (mean(value) - Truth)/Truth)
cvlong %>% group_by(stat, Approach) %>%
summarize(`mean` = mean(value), `std.dev` = sd(value), `Percent bias` = 100 * (mean(value) - Truth[1])/Truth[1])
summary(subset(cvlong, stat == "OR")$value)
hist(subset(cvlong, stat == "OR")$value)
cvlong$Approach <- labs[cvlong$scen]
cvlong$Truth <- ifelse(cvlong$stat == "AUC", .5, 1.0)
cvlong$value[cvlong$value] <- NA
cvlong %>% group_by(stat, Approach) %>%
summarize(`mean` = mean(value, na.rm =TRUE), `std.dev` = sd(value, na.rm = TRUE),
`Percent bias` = 100 * (mean(value - Truth[1], na.rm = TRUE))/Truth[1])
cvlong$value[!is.finite(cvlong$value)] <- NA
cvlong %>% group_by(stat, Approach) %>%
summarize(`mean` = mean(value, na.rm =TRUE), `std.dev` = sd(value, na.rm = TRUE),
`Percent bias` = 100 * (mean(value - Truth[1], na.rm = TRUE))/Truth[1])
hist(subset(cvlong, stat == "OR")$value)
2000/50
50/2000
10/2000
40/2000
2000/10
200/2000
ggplot(cldat.trtplot,
aes(time = DSS.time, status = DSS, linetype = Post.Surgical.Treatment)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Treatment", labels = c("OBS", "ACT")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization") +
facet_wrap(~ riskgrp, ncol = 1)
?facet_wrap
source("../Code/03-new-signature-zhu.R")
## substitution estimate using full dataset
obsgrp <- subset(ldat, Post.Surgical.Treatment == "OBS")
obsgrpw <- subset(gdat, Post.Surgical.Treatment == "OBS")
fit.all <- fit.superpc(obsgrp, cldat)
fitted <- predict.superpc(gdat, fit.all)
evalall <- eval.predict(obsgrpw, fit.all)
cldat[, "riskgrp"] <- fitted$riskgrp
cldat$DSS <- as.numeric(cldat$DSS.status == "Dead")
#ggplot(subset(cldat, Post.Surgical.Treatment == "OBS"),
#       aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
#  theme_bw(base_size = 13, base_family = "serif") +
#  scale_linetype_discrete("Resubstitution", labels = c("Low risk", "High risk")) +
#  ylab("Disease Specific Survival") + xlab("Time in years since randomization")
trtgrp <- subset(gdat, Post.Surgical.Treatment == "ACT")
trt.dat <- merge(data.frame(ID = trtgrp$ID, lps = predict.superpc(trtgrp, fit.all)$lps,
riskgrp = predict.superpc(trtgrp, fit.all)$riskgrp),
cldat[, - which(colnames(cldat) %in% c("riskgrp", "lps"))], by = "ID", all.y = FALSE)
preval.dat2 <- rbind(preval.dat, trt.dat)
cldat.trtplot <- cldat
cldat.trtplot$Post.Surgical.Treatment <- "Combined"
cldat.trtplot <- rbind(cldat, cldat.trtplot)
# ggplot(cldat.trtplot,
#        aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
#   theme_bw(base_size = 13, base_family = "serif") +
#   scale_linetype_discrete("Partial Resubstitution", labels = c("Low risk", "High risk")) +
#   ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization") +
#   facet_wrap(~ Post.Surgical.Treatment, ncol = 1)
ggplot(cldat.trtplot,
aes(time = DSS.time, status = DSS, linetype = Post.Surgical.Treatment)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Treatment", labels = c("OBS", "ACT")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization") +
facet_wrap(~ riskgrp, ncol = 1, labeller = label_value(labels = c("Low risk", "High risk")))
set.seed(332)
obssel <- unique(obsgrp$ID)
# randomly reorder and select 8 groups of 6 and 2 groups of 7
obssel <- obssel[sample(1:length(obssel), length(obssel), replace = FALSE)]
sets <- c(rep(6, 8), 7, 7)
scpet <- vector(mode = "list", length = 10)
j <- 1
for(i in 1:10){
scpet[[i]] <- obssel[j:(j + sets[i] - 1)]
j <- j + sets[i]
}
hat.f <- vector("list", 10)
for(i in 1:10){
obsgrpb <- subset(ldat, Post.Surgical.Treatment == "OBS" & ID %in% setdiff(obssel, scpet[[i]]))
obsgrpwb <- subset(gdat, Post.Surgical.Treatment == "OBS" & ID %in% scpet[[i]])
fit.b <- fit.superpc(obsgrpb, cldat)
hat.f[[i]] <- cbind(ID = scpet[[i]], as.data.frame(predict.superpc(obsgrpwb, fit.b)))
}
preval.dat <- merge(do.call("rbind", hat.f), cldat[, - which(colnames(cldat) %in% c("riskgrp", "lps"))], by = "ID", all.y = FALSE)
# ggplot(preval.dat,
#        aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
#   theme_bw(base_size = 13, base_family = "serif") +
#   scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
#   ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization")
devtools::install_github("sachsmc/ggkm")
?geom_smooth
source('~/.active-rstudio-document', echo=TRUE)
ggplot(cldat.trtplot,
aes(time = DSS.time, status = DSS, linetype = Post.Surgical.Treatment)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Treatment", labels = c("OBS", "ACT")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization") +
facet_wrap(~ riskgrp, ncol = 1)
?label_value
ggplot(cldat.trtplot,
aes(time = DSS.time, status = DSS, linetype = Post.Surgical.Treatment)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Treatment", labels = c("OBS", "ACT", "Combined")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization") +
facet_wrap(~ factor(riskgrp, labels = c("High risk", "Low risk")), ncol = 1)
table(factor(cldat.trtplot$riskgrp))
table(factor(cldat.trtplot$riskgrp), labels = c("Low risk", "High risk"))
?factor
table(factor(cldat.trtplot$riskgrp), levels = c("FALSE", "TRUE"), labels = c("Low risk", "High risk"))
table(factor(cldat.trtplot$riskgrp, levels = c(FALSE, TRUE), labels = c("Low risk", "High risk")))
cldat.trtplot$Risk.fac <- factor(cldat.trtplot$riskgrp, levels = c(FALSE, TRUE), labels = c("Low risk", "High risk"))
ggplot(cldat.trtplot,
aes(time = DSS.time, status = DSS, linetype = Post.Surgical.Treatment)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Treatment", labels = c("OBS", "ACT", "Combined")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization") +
facet_wrap(~ Risk.fac)
ggplot(subset(cldat.trtplot, Post.Surgical.Treatment != "Combined") ,
aes(time = DSS.time, status = DSS, linetype = Post.Surgical.Treatment)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Treatment", labels = c("OBS", "ACT")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization") +
facet_wrap(~ Risk.fac)
preval.dat2.trtplot <- preval.dat2
preval.dat2.trtplot$Post.Surgical.Treatment <- "Combined"
preval.dat2.trtplot <- rbind(preval.dat2, preval.dat2.trtplot)
preval.dat2.trtplot$Risk.fac <- factor(preval.dat2.trtplot$riskgrp, levels = c(FALSE, TRUE), labels = c("Low risk", "High risk"))
ggplot(subset(preval.dat2.trtplot, Post.Surgical.Treatment != "Combined") ,
aes(time = DSS.time, status = DSS, linetype = Post.Surgical.Treatment)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Treatment", labels = c("OBS", "ACT")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization") +
facet_wrap(~ Risk.fac)
?survConcordance
citation("survival")
preval.dat
survConcordance(Surv(DSS.time, DSS) ~ lps, data = preval.dat)
survConcordance(Surv(DSS.time, DSS) ~ lps, data = preval.dat)$concordance
evalall[2]
evalall
ggplot(subset(preval.dat2.trtplot, Post.Surgical.Treatment != "Combined") ,
aes(time = DSS.time, status = DSS, linetype = Post.Surgical.Treatment)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Treatment") +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization") +
facet_wrap(~ Risk.fac)
cldat.trtplot$Risk.fac <- factor(cldat.trtplot$riskgrp, levels = c(FALSE, TRUE), labels = c("Low risk", "High risk"))
ggplot(subset(cldat.trtplot, Post.Surgical.Treatment != "Combined") ,
aes(time = DSS.time, status = DSS, linetype = Post.Surgical.Treatment)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Treatment") +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization") +
facet_wrap(~ Risk.fac)
?kable
ID <- sample(1:10, 100, replace = TRUE)
ID
boots <- sample(unique(ID), 50, replace = TRUE)
boots
sort(boots)
sapply(boots, function(x) which(ID %in% x))
unlist(lapply(boots, function(x) which(ID %in% x)))
boots <- sample(unique(ID), 10, replace = TRUE)
unlist(lapply(boots, function(x) which(ID %in% x)))
ID[boots]
boots
unlist(lapply(boots, function(x) which(ID == x)))
?identitcal
?identical
unlist(lapply(boots, function(x) which(identical(ID, x))))
unlist(lapply(boots, function(x) which(all.equal(ID, x))))
unlist(lapply(boots, function(x) which(ID == x)))
dex <- unlist(lapply(boots, function(x) which(ID == x)))
ID[dex]
boots
library(dplyr)
library(ggplot2)
library(knitr)
library(survival)
library(ggkm)
library(tidyr)
opts_chunk$set(echo = FALSE, message = FALSE, error = FALSE, warning = FALSE)
knit_hooks$set(plot = function(x, options) {
if ('tikz' %in% options$dev && !options$external) {
hook_plot_tex(x, options)
} else hook_plot_md(x, options)
})
load("../Code/cvsim-result.RData")
cvres <- do.call("rbind", cvsims)
cvlong <- do.call("rbind", lapply(1:ncol(cvres), function(i){
cl <- cvres[, i]
splow <- strsplit(colnames(cvres)[i], ".", fixed = TRUE)
nm <- paste(unlist(sapply(splow, function(s) rev(rev(s)[-1]))), collapse = ".")
cls <- sapply(splow, function(s) rev(s)[1])
data.frame(value = cvres[, i], stat = cls, scen = nm, stringsAsFactors = FALSE)
}))
ggplot(subset(cvlong, stat == "AUC"), aes(y = value, x = scen)) + geom_violin(fill = "grey60") +
theme_bw(base_size = 13, base_family = "serif") + coord_flip() +
scale_x_discrete("Estimation Approach", labels = c("Bootstrap", "Leave 10 out CV", "Leave 100 out CV", "Pre-validation",
"30% Holdout", "50% Holdout", "Resubstitution",
"Partial CV", "Partial Holdout", "Partial Resubstitution")) +
ylab("Area Under the ROC Curve")
ggplot(subset(cvlong, stat == "OR"), aes(y = value, x = scen)) + geom_violin(fill = "grey60") +
theme_bw(base_size = 13, base_family = "serif") + coord_flip() +
scale_x_discrete("Estimation Approach", labels = c("Bootstrap", "Leave 2% out CV", "Leave 10% out CV", "Pre-validation",
"30% Holdout", "50% Holdout", "Resubstitution",
"Partial CV (2%)", "Partial Holdout", "Partial Resubstitution")) +
ylab("Odds Ratio")
labs <- c(boot = "Bootstrap", cv.10 = "Leave 2% out CV", cv.100 = "Leave 10% out CV",
cv.preval = "Pre-validation",
holdout.3 = "30% Holdout", holdout.5 = "50% Holdout", naive = "Resubstitution",
zhu.cv = "Partial CV (2%)", zhu.hold = "Partial Holdout", zhu.hold2 = "Partial Resubstitution")
cvlong$Approach <- labs[cvlong$scen]
cvlong$Truth <- ifelse(cvlong$stat == "AUC", .5, 1.0)
cvlong$value[!is.finite(cvlong$value)] <- NA
cvlong %>% group_by(stat, Approach) %>%
summarize(`mean` = mean(value, na.rm =TRUE), `std.dev` = sd(value, na.rm = TRUE),
`Percent bias` = 100 * (mean(value - Truth[1], na.rm = TRUE))/Truth[1]) %>%
kable(digits = 2, caption = "Comparison of different approaches to estimating the Area Under the ROC Curve (AUC) and the odds ratio (OR) in the setting where a dataset is used to both define and evaluate the signature. The true value of the AUC is 0.5 and the true value of the OR is 1.0. Estimates are based on 1000 replicates of the numerical experiment. CV = Cross validation. ")
cvlong$value[cvlong$stat == "OR"] <- exp(cvlong$value[cvlong$stat == "OR"])
ggplot(subset(cvlong, stat == "AUC"), aes(y = value, x = scen)) + geom_violin(fill = "grey60") +
theme_bw(base_size = 13, base_family = "serif") + coord_flip() +
scale_x_discrete("Estimation Approach", labels = c("Bootstrap", "Leave 10 out CV", "Leave 100 out CV", "Pre-validation",
"30% Holdout", "50% Holdout", "Resubstitution",
"Partial CV", "Partial Holdout", "Partial Resubstitution")) +
ylab("Area Under the ROC Curve")
ggplot(subset(cvlong, stat == "OR"), aes(y = value, x = scen)) + geom_violin(fill = "grey60") +
theme_bw(base_size = 13, base_family = "serif") + coord_flip() +
scale_x_discrete("Estimation Approach", labels = c("Bootstrap", "Leave 2% out CV", "Leave 10% out CV", "Pre-validation",
"30% Holdout", "50% Holdout", "Resubstitution",
"Partial CV (2%)", "Partial Holdout", "Partial Resubstitution")) +
ylab("Log Odds Ratio")
ggplot(subset(cvlong, stat == "OR"), aes(y = value, x = scen)) + geom_violin(fill = "grey60") +
theme_bw(base_size = 13, base_family = "serif") + coord_flip() +
scale_x_discrete("Estimation Approach", labels = c("Bootstrap", "Leave 2% out CV", "Leave 10% out CV", "Pre-validation",
"30% Holdout", "50% Holdout", "Resubstitution",
"Partial CV (2%)", "Partial Holdout", "Partial Resubstitution")) + scale_y_log10() +
ylab("Odds Ratio (log scale)")
ggplot(subset(cvlong, stat == "OR"), aes(y = value, x = scen)) + geom_violin(fill = "grey60") +
theme_bw(base_size = 13, base_family = "serif") + coord_flip() +
scale_x_discrete("Estimation Approach", labels = c("Bootstrap", "Leave 2% out CV", "Leave 10% out CV", "Pre-validation",
"30% Holdout", "50% Holdout", "Resubstitution",
"Partial CV (2%)", "Partial Holdout", "Partial Resubstitution")) + scale_y_log10(breaks = c(.1, 1, 2)) +
ylab("Odds Ratio (log scale)")
ggplot(subset(cvlong, stat == "OR"), aes(y = value, x = scen)) + geom_violin(fill = "grey60") +
theme_bw(base_size = 13, base_family = "serif") + coord_flip() +
scale_x_discrete("Estimation Approach", labels = c("Bootstrap", "Leave 2% out CV", "Leave 10% out CV", "Pre-validation",
"30% Holdout", "50% Holdout", "Resubstitution",
"Partial CV (2%)", "Partial Holdout", "Partial Resubstitution")) + scale_y_log10(breaks = c(.5, 1, 2)) +
ylab("Odds Ratio (log scale)")
ggplot(subset(cvlong, stat == "OR"), aes(y = value, x = scen)) + geom_violin(fill = "grey60") +
theme_bw(base_size = 13, base_family = "serif") + coord_flip() +
scale_x_discrete("Estimation Approach", labels = c("Bootstrap", "Leave 2% out CV", "Leave 10% out CV", "Pre-validation",
"30% Holdout", "50% Holdout", "Resubstitution",
"Partial CV (2%)", "Partial Holdout", "Partial Resubstitution")) + scale_y_log10(breaks = c(.5, 1, 2, 4)) +
ylab("Odds Ratio (log scale)")
labs <- c(boot = "Bootstrap", cv.10 = "Leave 2% out CV", cv.100 = "Leave 10% out CV",
cv.preval = "Pre-validation",
holdout.3 = "30% Holdout", holdout.5 = "50% Holdout", naive = "Resubstitution",
zhu.cv = "Partial CV (2%)", zhu.hold = "Partial Holdout", zhu.hold2 = "Partial Resubstitution")
cvlong$Approach <- labs[cvlong$scen]
cvlong$Truth <- ifelse(cvlong$stat == "AUC", .5, 1.0)
cvlong$value[!is.finite(cvlong$value)] <- NA
cvlong %>% group_by(stat, Approach) %>%
summarize(`mean` = mean(value, na.rm =TRUE), `std.dev` = sd(value, na.rm = TRUE),
`Percent bias` = 100 * (mean(value - Truth[1], na.rm = TRUE))/Truth[1]) %>%
kable(digits = 2, caption = "Comparison of different approaches to estimating the Area Under the ROC Curve (AUC) and the odds ratio (OR) in the setting where a dataset is used to both define and evaluate the signature. The true value of the AUC is 0.5 and the true value of the OR is 1.0. Estimates are based on 1000 replicates of the numerical experiment. CV = Cross validation. ")
cvlong %>% filter(stat == "AUC") %>% group_by(Approach) %>%
summarize(`mean` = mean(value, na.rm =TRUE), `std.dev` = sd(value, na.rm = TRUE),
`Percent bias` = 100 * (mean(value - Truth[1], na.rm = TRUE))/Truth[1])
cvlong %>% filter(stat == "AUC") %>% group_by(Approach) %>%
summarize(`stat` = "AUC", `mean` = mean(value, na.rm =TRUE), `std.dev` = sd(value, na.rm = TRUE),
`Percent bias` = 100 * (mean(value - Truth[1], na.rm = TRUE))/Truth[1])
cvlong %>% filter(stat == "OR") %>% group_by(Approach) %>%
summarize(`stat` = "OR", `mean` = exp(mean(log(value), na.rm =TRUE)),
`std.dev` = exp(sd(log(value), na.rm = TRUE)),
`Percent bias` = 100 * (exp(mean(log(value) - log(Truth[1]), na.rm = TRUE)))/exp(Truth[1]))
cvlong %>% group_by(stat, Approach) %>%
summarize(`mean` = mean(value, na.rm =TRUE), `std.dev` = sd(value, na.rm = TRUE),
`Bias` = mean(value - Truth[1], na.rm = TRUE))
cvlong %>% group_by(stat, Approach) %>%
summarize(`mean` = mean(value, na.rm =TRUE), `std.dev` = sd(value, na.rm = TRUE),
`Bias` = mean(value - Truth[1], na.rm = TRUE)) %>%
kable(digits = 2, caption = "Comparison of different approaches to estimating the Area Under the ROC Curve (AUC) and the odds ratio (OR) in the setting where a dataset is used to both define and evaluate the signature. The true value of the AUC is 0.5 and the true value of the OR is 1.0. Estimates are based on 1000 replicates of the numerical experiment. CV = Cross validation. ")
cvlong$value[cvlong$stat == "OR"] <- log(cvlong$value[cvlong$stat == "OR"])
cvlong$Approach <- labs[cvlong$scen]
cvlong$Truth <- ifelse(cvlong$stat == "AUC", .5, 0.0)
cvlong$value[!is.finite(cvlong$value)] <- NA
cvlong %>% group_by(stat, Approach) %>%
summarize(`mean` = mean(value, na.rm =TRUE), `std.dev` = sd(value, na.rm = TRUE),
`Bias` = mean(value - Truth[1], na.rm = TRUE)) %>%
kable(digits = 2, caption = "Comparison of different approaches to estimating the Area Under the ROC Curve (AUC) and the odds ratio (OR) in the setting where a dataset is used to both define and evaluate the signature. The true value of the AUC is 0.5 and the true value of the OR is 1.0. Estimates are based on 1000 replicates of the numerical experiment. CV = Cross validation. ")
unique(cvlong$scen)
cvlong$scen <- factor(cvlong$scen, levels = c("naive", "zhu.cv", "zhu.hold", "zhu.hold2",
"cv.preval", "cv.10", "cv.100", "holdout.3",
"holdout.5", "boot"), ordered = TRUE)
load("../Code/cvsim-result.RData")
cvres <- do.call("rbind", cvsims)
cvlong <- do.call("rbind", lapply(1:ncol(cvres), function(i){
cl <- cvres[, i]
splow <- strsplit(colnames(cvres)[i], ".", fixed = TRUE)
nm <- paste(unlist(sapply(splow, function(s) rev(rev(s)[-1]))), collapse = ".")
cls <- sapply(splow, function(s) rev(s)[1])
data.frame(value = cvres[, i], stat = cls, scen = nm, stringsAsFactors = FALSE)
}))
cvlong$scen <- factor(cvlong$scen, levels = c("naive", "zhu.cv", "zhu.hold", "zhu.hold2",
"cv.preval", "cv.10", "cv.100", "holdout.3",
"holdout.5", "boot"), ordered = TRUE)
cvlong$value[cvlong$stat == "OR"] <- exp(cvlong$value[cvlong$stat == "OR"])
ggplot(subset(cvlong, stat == "AUC"), aes(y = value, x = scen)) + geom_violin(fill = "grey60") +
theme_bw(base_size = 13, base_family = "serif") + coord_flip() +
scale_x_discrete("Estimation Approach", labels = c("Bootstrap", "Leave 10 out CV", "Leave 100 out CV", "Pre-validation",
"30% Holdout", "50% Holdout", "Resubstitution",
"Partial CV", "Partial Holdout", "Partial Resubstitution")) +
ylab("Area Under the ROC Curve")
ggplot(subset(cvlong, stat == "AUC"), aes(y = value, x = scen)) + geom_violin(fill = "grey60") +
theme_bw(base_size = 13, base_family = "serif") + coord_flip() +
scale_x_discrete("Estimation Approach", labels = c("Resubstitution", "Partial CV",
"Partial Holdout", "Partial Resubstitution",
"Pre-validation", "Leave 10 out CV",
"Leave 100 out CV",
"30% Holdout", "50% Holdout", "Bootstrap"
)) +
ylab("Area Under the ROC Curve")
load("../Code/cvsim-result.RData")
cvres <- do.call("rbind", cvsims)
cvlong <- do.call("rbind", lapply(1:ncol(cvres), function(i){
cl <- cvres[, i]
splow <- strsplit(colnames(cvres)[i], ".", fixed = TRUE)
nm <- paste(unlist(sapply(splow, function(s) rev(rev(s)[-1]))), collapse = ".")
cls <- sapply(splow, function(s) rev(s)[1])
data.frame(value = cvres[, i], stat = cls, scen = nm, stringsAsFactors = FALSE)
}))
cvlong$value[cvlong$stat == "OR"] <- exp(cvlong$value[cvlong$stat == "OR"])
cvlong$scen <- factor(cvlong$scen, levels = c("naive", "zhu.cv", "zhu.hold", "zhu.hold2",
"cv.preval", "cv.10", "cv.100", "holdout.3",
"holdout.5", "boot"), ordered = TRUE)
labs <- c("Resubstitution", "Partial CV",
"Partial Holdout", "Partial Resubstitution",
"Pre-validation", "Leave 10 out CV", "Leave 100 out CV",
"30% Holdout", "50% Holdout", "Bootstrap")
names(labs) <- levels(cvlong$scen)
ggplot(subset(cvlong, stat == "AUC"), aes(y = value, x = scen)) + geom_violin(fill = "grey60") +
theme_bw(base_size = 13, base_family = "serif") + coord_flip() +
scale_x_discrete("Estimation Approach", labels = labs) +
ylab("Area Under the ROC Curve")
ggplot(subset(cvlong, stat == "OR"), aes(y = value, x = scen)) + geom_violin(fill = "grey60") +
theme_bw(base_size = 13, base_family = "serif") + coord_flip() +
scale_x_discrete("Estimation Approach", labels = labs) + scale_y_log10(breaks = c(.5, 1, 2, 4)) +
ylab("Odds Ratio (log scale)")
cvlong$value[cvlong$stat == "OR"] <- log(cvlong$value[cvlong$stat == "OR"])
cvlong$Approach <- labs[cvlong$scen]
cvlong$Truth <- ifelse(cvlong$stat == "AUC", .5, 0.0)
cvlong$value[!is.finite(cvlong$value)] <- NA
cvlong %>% group_by(stat, Approach) %>%
summarize(`mean` = mean(value, na.rm =TRUE), `std.dev` = sd(value, na.rm = TRUE),
`Bias` = mean(value - Truth[1], na.rm = TRUE)) %>%
kable(digits = 2, caption = "Comparison of different approaches to estimating the Area Under the ROC Curve (AUC) and the log odds ratio (OR) in the setting where a dataset is used to both define and evaluate the signature. The true value of the AUC is 0.5 and the true value of the Log OR is 0.0. Estimates are based on 1000 replicates of the numerical experiment. CV = Cross validation. ")
cvlong$Approach <- factor(labs[cvlong$scen], levels = labs, ordered = TRUE)
cvlong$Truth <- ifelse(cvlong$stat == "AUC", .5, 0.0)
cvlong$value[!is.finite(cvlong$value)] <- NA
cvlong %>% group_by(stat, Approach) %>%
summarize(`mean` = mean(value, na.rm =TRUE), `std.dev` = sd(value, na.rm = TRUE),
`Bias` = mean(value - Truth[1], na.rm = TRUE)) %>%
kable(digits = 2, caption = "Comparison of different approaches to estimating the Area Under the ROC Curve (AUC) and the log odds ratio (OR) in the setting where a dataset is used to both define and evaluate the signature. The true value of the AUC is 0.5 and the true value of the Log OR is 0.0. Estimates are based on 1000 replicates of the numerical experiment. CV = Cross validation. ")
?fig.cap
load("../Code/cvsim-result.RData")
cvres <- do.call("rbind", cvsims)
cvlong <- do.call("rbind", lapply(1:ncol(cvres), function(i){
cl <- cvres[, i]
splow <- strsplit(colnames(cvres)[i], ".", fixed = TRUE)
nm <- paste(unlist(sapply(splow, function(s) rev(rev(s)[-1]))), collapse = ".")
cls <- sapply(splow, function(s) rev(s)[1])
data.frame(value = cvres[, i], stat = cls, scen = nm, stringsAsFactors = FALSE)
}))
cvlong$value[cvlong$stat == "OR"] <- exp(cvlong$value[cvlong$stat == "OR"])
cvlong$scen <- factor(cvlong$scen, levels = c("naive", "zhu.cv", "zhu.hold", "zhu.hold2",
"cv.preval", "cv.10", "cv.100", "holdout.3",
"holdout.5", "boot"), ordered = TRUE)
labs <- c("Resubstitution", "Partial CV",
"Partial Holdout", "Partial Resubstitution",
"Pre-validation", "Leave 10 out CV", "Leave 100 out CV",
"30% Holdout", "50% Holdout", "Bootstrap")
names(labs) <- levels(cvlong$scen)
ggplot(subset(cvlong, stat == "AUC"), aes(y = value, x = scen)) + geom_violin(fill = "grey60") +
theme_bw(base_size = 13, base_family = "serif") + coord_flip() +
scale_x_discrete("Estimation Approach", labels = labs) +
ylab("Area Under the ROC Curve")
library(dplyr)
library(ggplot2)
library(knitr)
library(survival)
library(ggkm)
library(tidyr)
opts_chunk$set(echo = FALSE, message = FALSE, error = FALSE, warning = FALSE)
knit_hooks$set(plot = function(x, options) {
if ('tikz' %in% options$dev && !options$external) {
hook_plot_tex(x, options)
} else hook_plot_md(x, options)
})
load("../Code/cvsim-result.RData")
cvres <- do.call("rbind", cvsims)
cvlong <- do.call("rbind", lapply(1:ncol(cvres), function(i){
cl <- cvres[, i]
splow <- strsplit(colnames(cvres)[i], ".", fixed = TRUE)
nm <- paste(unlist(sapply(splow, function(s) rev(rev(s)[-1]))), collapse = ".")
cls <- sapply(splow, function(s) rev(s)[1])
data.frame(value = cvres[, i], stat = cls, scen = nm, stringsAsFactors = FALSE)
}))
cvlong$value[cvlong$stat == "OR"] <- exp(cvlong$value[cvlong$stat == "OR"])
cvlong$scen <- factor(cvlong$scen, levels = c("naive", "zhu.cv", "zhu.hold", "zhu.hold2",
"cv.preval", "cv.10", "cv.100", "holdout.3",
"holdout.5", "boot"), ordered = TRUE)
labs <- c("Resubstitution", "Partial CV",
"Partial Holdout", "Partial Resubstitution",
"Pre-validation", "Leave 10 out CV", "Leave 100 out CV",
"30% Holdout", "50% Holdout", "Bootstrap")
names(labs) <- levels(cvlong$scen)
ggplot(subset(cvlong, stat == "AUC"), aes(y = value, x = scen)) + geom_violin(fill = "grey60") +
theme_bw(base_size = 13, base_family = "serif") + coord_flip() +
scale_x_discrete("Estimation Approach", labels = labs) +
ylab("Area Under the ROC Curve")
cvlong$value[cvlong$stat == "OR"] <- log(cvlong$value[cvlong$stat == "OR"])
cvlong$Approach <- factor(labs[cvlong$scen], levels = labs, ordered = TRUE)
cvlong$Truth <- ifelse(cvlong$stat == "AUC", .5, 0.0)
cvlong$value[!is.finite(cvlong$value)] <- NA
cvlong %>% group_by(stat, Approach)
cvlong %>% group_by(stat, Approach) %>%
summarize(`mean` = mean(value, na.rm =TRUE), `std.dev` = sd(value, na.rm = TRUE),
`Bias` = mean(value - Truth[1], na.rm = TRUE))
cvlong %>% group_by(stat, Approach) %>%
summarize(`mean` = mean(value, na.rm =TRUE), `std.dev` = sd(value, na.rm = TRUE),
`Bias` = mean(value - Truth[1], na.rm = TRUE)) %>% spread(stat, mean)
cvwide <- cvlong %>% group_by(stat, Approach) %>%
summarize(`mean` = mean(value, na.rm =TRUE), `std.dev` = sd(value, na.rm = TRUE),
`Bias` = mean(value - Truth[1], na.rm = TRUE))
cvwide
cvwide[1:10, ]
merge(cvwide[1:10, ], cvwide[11:20,], by = c("Approach"))
merge(cvwide[1:10, -1], cvwide[11:20, -1], by = c("Approach"))
cvwide <- merge(cvwide[1:10, -1], cvwide[11:20, -1], by = c("Approach"))
colnames(cvwide) <- gsub(".x", " AUC", colnames(cvwide))
cvwide
cvwide <- cvlong %>% group_by(stat, Approach) %>%
summarize(`mean` = mean(value, na.rm =TRUE), `std.dev` = sd(value, na.rm = TRUE),
`Bias` = mean(value - Truth[1], na.rm = TRUE))
cvwide <- merge(cvwide[1:10, -1], cvwide[11:20, -1], by = c("Approach"))
colnames(cvwide) <- gsub(".x", " AUC", colnames(cvwide))
colnames(cvwide) <- gsub(".y", " OR", colnames(cvwide))
cvwide %>%
kable(digits = 2, caption = "Comparison of different approaches to estimating the Area Under the ROC Curve (AUC) and the log odds ratio (OR) in the setting where a dataset is used to both develop the signature and evaluate its performance. The true value of the AUC is 0.5 and the true value of the Log OR is 0.0. Estimates are based on 1000 replicates of the numerical experiment. In each replicate, there are 1000 observations and 500 features. CV = Cross validation. ")
cvwide
cvlong
cvlong %>% group_by(stat, Approach) %>%
summarize(`mean` = mean(value, na.rm =TRUE), `std.dev` = sd(value, na.rm = TRUE),
`Bias` = mean(value - Truth[1], na.rm = TRUE))
cvlong$value[cvlong$stat == "OR"] <- log(cvlong$value[cvlong$stat == "OR"])
cvlong$Approach <- factor(labs[cvlong$scen], levels = labs, ordered = TRUE)
cvlong$Truth <- ifelse(cvlong$stat == "AUC", .5, 0.0)
cvlong$value[!is.finite(cvlong$value)] <- NA
cvwide <- cvlong %>% group_by(stat, Approach) %>%
summarize(`mean` = mean(value, na.rm =TRUE), `std.dev` = sd(value, na.rm = TRUE),
`Bias` = mean(value - Truth[1], na.rm = TRUE))
cvwide2 <- merge(cvwide[1:10, -1], cvwide[11:20, -1], by = c("Approach"))
colnames(cvwide2) <- gsub(".x", " AUC", colnames(cvwide2))
colnames(cvwide2) <- gsub(".y", " OR", colnames(cvwide2))
cvwide2
cvwide
?left_join
cvwide2 <- left_join(cvwide[1:10, -1], cvwide[11:20, -1], by = c("Approach"))
cvwide2
colnames(cvwide2) <- gsub(".x", " AUC", colnames(cvwide2))
colnames(cvwide2) <- gsub(".y", " OR", colnames(cvwide2))
cvwide %>%
kable(digits = 2, caption = "Comparison of different approaches to estimating the Area Under the ROC Curve (AUC) and the log odds ratio (OR) in the setting where a dataset is used to both develop the signature and evaluate its performance. The true value of the AUC is 0.5 and the true value of the Log OR is 0.0. Estimates are based on 1000 replicates of the numerical experiment. In each replicate, there are 1000 observations and 500 features. CV = Cross validation. ")
cvwide2 %>%
kable(digits = 2, caption = "Comparison of different approaches to estimating the Area Under the ROC Curve (AUC) and the log odds ratio (OR) in the setting where a dataset is used to both develop the signature and evaluate its performance. The true value of the AUC is 0.5 and the true value of the Log OR is 0.0. Estimates are based on 1000 replicates of the numerical experiment. In each replicate, there are 1000 observations and 500 features. CV = Cross validation. ")
?kable
