ngen.0 <- ngen.cur <- 0
cors.num <- gen.in <- NULL
while(ngen.cur < ngen.max){
cors.try <- rep(NA, length(gen.remain))
names(cors.try) <- gen.remain
for(gen.try in gen.remain){
dateval$cand.score <- unlist(dateval$cand.score + dateval[, gen.try])
cors.try[gen.try] <- survConcordance(Surv(DSS.time, DSS.status == "Dead") ~ cand.score, data = dateval)$concordance
}
# select score with highest concordance
gen.sel <- names(sort(cors.try, decreasing = TRUE)[1])
datfin$score <- unlist(datfin$score + datfin[, gen.sel])
gen.remain <- setdiff(gen.remain, gen.sel)
gen.in <- append(gen.in, gen.sel)
dateval$cand.score <- datfin$score
cors.num <- append(cors.num, survConcordance(Surv(DSS.time, DSS.status == "Dead") ~ score, data = datfin)$concordance)
ngen.cur <- ngen.cur + 1
}
fin.sig <- gen.in[1:which(cors.num == max(cors.num))]
ngen.cur
gen.cand <- gen.remain <- cors$gene[order(cors$X2)]
dateval <- datfin <- seldat0
dateval$cand.score <- datfin$score <- 0
ngen.0 <- ngen.cur <- 0
cors.num <- gen.in <- NULL
cors.try <- rep(NA, length(gen.remain))
names(cors.try) <- gen.remain
for(gen.try in gen.remain){
dateval$cand.score <- unlist(dateval$cand.score + dateval[, gen.try])
cors.try[gen.try] <- survConcordance(Surv(DSS.time, DSS.status == "Dead") ~ cand.score, data = dateval)$concordance
}
cors.try
dateval
table(dateval$DSS.status)
?Surv
library(dplyr)
library(ggplot2)
library(knitr)
library(ggkm)
library(tidyr)
opts_chunk$set(echo = FALSE, message = FALSE, error = FALSE, warning = FALSE)
knit_hooks$set(plot = function(x, options) {
if ('tikz' %in% options$dev && !options$external) {
hook_plot_tex(x, options)
} else hook_plot_md(x, options)
})
source("../Code/03-new-signature-zhu.R")
## substitution estimate using full dataset
obsgrp <- subset(ldat, Post.Surgical.Treatment == "OBS")
obsgrpw <- subset(gdat, Post.Surgical.Treatment == "OBS")
fit.all <- fit.superpc(obsgrp, cldat)
fitted <- predict.superpc(obsgrpw, fit.all)
evalall <- eval.predict(obsgrpw, fit.all)
cldat[cldat$Post.Surgical.Treatment == "OBS", "risk.group"] <- fitted$riskgrp
cldat$DSS <- as.numeric(cldat$DSS.status == "Dead")
ggplot(subset(cldat, Post.Surgical.Treatment == "OBS"),
aes(time = DSS.time, status = DSS, linetype = risk.group)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + xlab("Time in years since randomization")
obssel <- unique(obsgrp$ID)
# randomly reorder and select 8 groups of 6 and 2 groups of 7
obssel <- obssel[sample(1:length(obssel), length(obssel), replace = FALSE)]
sets <- c(rep(6, 8), 7, 7)
scpet <- vector(mode = "list", length = 10)
j <- 1
for(i in 1:10){
scpet[[i]] <- obssel[j:(j + sets[i] - 1)]
j <- j + sets[i]
}
hat.f <- vector("list", 10)
i <- 1
obsgrpb <- subset(ldat, Post.Surgical.Treatment == "OBS" & ID %in% setdiff(obssel, scpet[[i]]))
obsgrpwb <- subset(gdat, Post.Surgical.Treatment == "OBS" & ID %in% scpet[[i]])
fit.b <- fit.superpc(obsgrpb, cldat)
hat.f[[i]] <- cbind(ID = scpet[[i]], as.data.frame(predict.superpc(obsgrpwb, fit.b)))
cbind(ID = scpet[[i]], as.data.frame(predict.superpc(obsgrpwb, fit.b)))
hat.f <- vector("list", 10)
for(i in 1:10){
obsgrpb <- subset(ldat, Post.Surgical.Treatment == "OBS" & ID %in% setdiff(obssel, scpet[[i]]))
obsgrpwb <- subset(gdat, Post.Surgical.Treatment == "OBS" & ID %in% scpet[[i]])
fit.b <- fit.superpc(obsgrpb, cldat)
hat.f[[i]] <- cbind(ID = scpet[[i]], as.data.frame(predict.superpc(obsgrpwb, fit.b)))
}
preval.dat <- merge(do.call("rbind", hat.f), cldat, by = "ID", all.y = FALSE)
ggplot(preval.dat,
aes(time = DSS.time, status = DSS, linetype = risk.group)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + xlab("Time in years since randomization")
preval.dat
ggplot(preval.dat,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + xlab("Time in years since randomization")
ggplot(preval.dat,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
scale_y_continuous("Disease Specific Survival", limits = c(0, 1)) + xlab("Time in years since randomization")
ggplot(preval.dat,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
scale_y_continuous("Disease Specific Survival", limits = c(0, 1)) + xlab("Time in years since randomization")
library(scale)
library(scales)
ggplot(preval.dat,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
scale_y_continuous("Disease Specific Survival", limits = c(0, 1)) + xlab("Time in years since randomization")
ggplot(preval.dat,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(c(0, 1)) + xlab("Time in years since randomization")
library(ggplot2)
ggplot(preval.dat,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(c(0, 1)) + xlab("Time in years since randomization")
ggplot(preval.dat,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + xlab("Time in years since randomization")
?ylim
ggplot(preval.dat,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization")
library(ggkm)
ggplot(preval.dat,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization")
source('~/.active-rstudio-document', echo=TRUE)
print
print.default
?print
?.Internal
print.lm
print.data.frame()
print.data.frame
?message
message
?simpleMessage
simpleMessage
print.message
print.condition()
print.condition
library(dplyr)
library(ggplot2)
library(knitr)
library(ggkm)
library(tidyr)
opts_chunk$set(echo = FALSE, message = FALSE, error = FALSE, warning = FALSE)
knit_hooks$set(plot = function(x, options) {
if ('tikz' %in% options$dev && !options$external) {
hook_plot_tex(x, options)
} else hook_plot_md(x, options)
})
load("../Code/cvsim-result.RData")
cvres <- do.call("rbind", cvsims)
cvlong <- do.call("rbind", lapply(1:ncol(cvres), function(i){
cl <- cvres[, i]
splow <- strsplit(colnames(cvres)[i], ".", fixed = TRUE)
nm <- paste(unlist(sapply(splow, function(s) rev(rev(s)[-1]))), collapse = ".")
cls <- sapply(splow, function(s) rev(s)[1])
data.frame(value = cvres[, i], stat = cls, scen = nm, stringsAsFactors = FALSE)
}))
table(cvlong$scen)
ggplot(subset(cvlong, stat == "AUC"), aes(y = value, x = scen)) + geom_violin(fill = "grey60") +
theme_bw(base_size = 13, base_family = "serif") + coord_flip()
ggplot(subset(cvlong, stat == "AUC"), aes(y = value, x = scen)) + geom_violin(fill = "grey60") +
theme_bw(base_size = 13, base_family = "serif") + coord_flip()
2000/10
2000/100
10/2000
ggplot(subset(cvlong, stat == "AUC"), aes(y = value, x = scen)) + geom_violin(fill = "grey60") +
theme_bw(base_size = 13, base_family = "serif") + coord_flip() +
scale_x_discrete("Estimation Approach", labels = c("Bootstrap", "Leave 10 out CV", "Leave 100 out CV", "Pre-validation",
"30% Holdout", "50% Holdout", "Resubstitution",
"Partial CV", "Partial Holdout", "Partial Resubstitution")) +
ylab("Area Under the ROC Curve")
source("../Code/03-new-signature-zhu.R")
## substitution estimate using full dataset
obsgrp <- subset(ldat, Post.Surgical.Treatment == "OBS")
obsgrpw <- subset(gdat, Post.Surgical.Treatment == "OBS")
fit.all <- fit.superpc(obsgrp, cldat)
fitted <- predict.superpc(obsgrpw, fit.all)
evalall <- eval.predict(obsgrpw, fit.all)
cldat[cldat$Post.Surgical.Treatment == "OBS", "risk.group"] <- fitted$riskgrp
cldat$DSS <- as.numeric(cldat$DSS.status == "Dead")
ggplot(subset(cldat, Post.Surgical.Treatment == "OBS"),
aes(time = DSS.time, status = DSS, linetype = risk.group)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Resubstitution", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + xlab("Time in years since randomization")
set.seed(332)
obssel <- unique(obsgrp$ID)
# randomly reorder and select 8 groups of 6 and 2 groups of 7
obssel <- obssel[sample(1:length(obssel), length(obssel), replace = FALSE)]
sets <- c(rep(6, 8), 7, 7)
scpet <- vector(mode = "list", length = 10)
j <- 1
for(i in 1:10){
scpet[[i]] <- obssel[j:(j + sets[i] - 1)]
j <- j + sets[i]
}
hat.f <- vector("list", 10)
for(i in 1:10){
obsgrpb <- subset(ldat, Post.Surgical.Treatment == "OBS" & ID %in% setdiff(obssel, scpet[[i]]))
obsgrpwb <- subset(gdat, Post.Surgical.Treatment == "OBS" & ID %in% scpet[[i]])
fit.b <- fit.superpc(obsgrpb, cldat)
hat.f[[i]] <- cbind(ID = scpet[[i]], as.data.frame(predict.superpc(obsgrpwb, fit.b)))
}
preval.dat <- merge(do.call("rbind", hat.f), cldat, by = "ID", all.y = FALSE)
ggplot(preval.dat,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization")
?NCOL
trtgrp <- subset(gdat, Post.Surgical.Treatment == "ACT")
predict.superpc(trtgrp, fit.all)
trtgrp$riskgrp <- predict.superpc(trtgrp, fit.all)$riskgrp
trtgrp$ID
trt.dat <- merge(cbind(ID == trtgrp$ID, riskgrp = predict.superpc(trtgrp, fit.all)$riskgrp), cldat, by = "ID", all.y = FALSE)
trt.dat <- merge(data.frame(ID == trtgrp$ID, riskgrp = predict.superpc(trtgrp, fit.all)$riskgrp), cldat, by = "ID", all.y = FALSE)
data.frame(ID == trtgrp$ID, riskgrp = predict.superpc(trtgrp, fit.all)$riskgrp)
trtgrp <- subset(gdat, Post.Surgical.Treatment == "ACT")
merge(data.frame(ID == trtgrp$ID, riskgrp = predict.superpc(trtgrp, fit.all)$riskgrp), cldat, by = "ID", all.y = FALSE)
trtgrp$ID
trt.dat <- merge(data.frame(ID = trtgrp$ID, riskgrp = predict.superpc(trtgrp, fit.all)$riskgrp), cldat, by = "ID", all.y = FALSE)
preval.dat2 <- rbind(preval.dat, trt.dat)
trt.dat
predict.superpc(trtgrp, fit.all)
trt.dat <- merge(data.frame(ID = trtgrp$ID, lps = predict.superpc(trtgrp, fit.all)$lps,
riskgrp = predict.superpc(trtgrp, fit.all)$riskgrp), cldat, by = "ID", all.y = FALSE)
preval.dat2 <- rbind(preval.dat, trt.dat)
ggplot(preval.dat2,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization")
ggplot(cldat,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization")
ggplot(cldat,
aes(time = DSS.time, status = DSS, linetype = risk.group)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization")
table(cldat$risk.group)
table(cldat$risk.group, exclude = NULL)
ggplot(preval.dat2,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization")
fitted <- predict.superpc(gdat, fit.all)
cldat[, "riskgrp"] <- fitted$riskgrp
cldat$DSS <- as.numeric(cldat$DSS.status == "Dead")
ggplot(subset(cldat, Post.Surgical.Treatment == "OBS"),
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Resubstitution", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + xlab("Time in years since randomization")
ggplot(cldat,
aes(time = DSS.time, status = DSS, linetype = risk.group)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization")
table(cldat$riskgrp)
ggplot(cldat,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization")
ggplot(cldat,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Partial Resubstitution", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization") +
facet_wrap(~ Post.Surgical.Treatment)
ggplot(preval.dat2,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization") +
facet_wrap(~ Post.Surgical.Treatment)
ggplot(preval.dat2,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization") +
facet_grid(~ Post.Surgical.Treatment, ncol = 1)
?facet_grid
?facet_wrap
ggplot(cldat,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Partial Resubstitution", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization") +
facet_wrap(~ Post.Surgical.Treatment, ncol = 1)
source('~/.active-rstudio-document', echo=TRUE)
preval.dat <- merge(do.call("rbind", hat.f), cldat[, - c("riskgrp", "lps")], by = "ID", all.y = FALSE)
preval.dat <- merge(do.call("rbind", hat.f), cldat[, - which(colnames(cldat) %in% c("riskgrp", "lps"))], by = "ID", all.y = FALSE)
ggplot(preval.dat,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization")
trtgrp <- subset(gdat, Post.Surgical.Treatment == "ACT")
trt.dat <- merge(data.frame(ID = trtgrp$ID, lps = predict.superpc(trtgrp, fit.all)$lps,
riskgrp = predict.superpc(trtgrp, fit.all)$riskgrp), cldat, by = "ID", all.y = FALSE)
preval.dat2 <- rbind(preval.dat, trt.dat)
trt.dat
trt.dat <- merge(data.frame(ID = trtgrp$ID, lps = predict.superpc(trtgrp, fit.all)$lps,
riskgrp = predict.superpc(trtgrp, fit.all)$riskgrp),
cldat[, - which(colnames(cldat) %in% c("riskgrp", "lps"))], by = "ID", all.y = FALSE)
preval.dat2 <- rbind(preval.dat, trt.dat)
ggplot(cldat,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Partial Resubstitution", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization") +
facet_wrap(~ Post.Surgical.Treatment, ncol = 1)
ggplot(preval.dat2,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization") +
facet_wrap(~ Post.Surgical.Treatment, ncol = 1)
cldat.trtplot <- cldat
cldat.trtplot$Post.Surgical.Treatment <- "Combined"
cldat.trtplot <- rbind(cldat, cldat.trtplot)
ggplot(cldat.trtplot,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Partial Resubstitution", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization") +
facet_wrap(~ Post.Surgical.Treatment, ncol = 1)
preval.dat2.trtplot <- preval.dat2
preval.dat2.trtplot$Post.Surgical.Treatment <- "Combined"
preval.dat2.trtplot <- rbind(preval.dat2, preval.dat2.trtplot)
ggplot(preval.dat2,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization") +
facet_wrap(~ Post.Surgical.Treatment, ncol = 1)
ggplot(preval.dat2.trtplot,
aes(time = DSS.time, status = DSS, linetype = riskgrp)) + geom_km() +
theme_bw(base_size = 13, base_family = "serif") +
scale_linetype_discrete("Prevalidated", labels = c("Low risk", "High risk")) +
ylab("Disease Specific Survival") + ylim(0, 1) + xlab("Time in years since randomization") +
facet_wrap(~ Post.Surgical.Treatment, ncol = 1)
preval.dat2
fit.train <- coxph(Surv(DSS.time, DSS) ~ riskgrp + Sex + Stage + age + Histology.type,
data = subset(cldat, Post.Surgical.Treatment == "OBS"))
fit.train
table(cldat$Histology.type)
table(cldat$Stage)
cldat$Stage2 <- cldat$Stage2 %in% c("2A", "2B", "II")
cldat$Stage2 <- cldat$Stage %in% c("2A", "2B", "II")
table(cldat$Stage2)
fit.train <- coxph(Surv(DSS.time, DSS) ~ riskgrp + Sex + Stage2 + age + Histology.type,
data = subset(cldat, Post.Surgical.Treatment == "OBS"))
fit.train
preval.dat2$Stage2 <- preval.dat2$Stage %in% c("2A", "2B", "II")
fit.preval <- coxph(Surv(DSS.time, DSS) ~ riskgrp + Sex + Stage2 + age + Histology.type,
data = subset(preval.dat2, Post.Surgical.Treatment == "OBS"))
fit.preval
fit.preval.inter <- coxph(Surv(DSS.time, DSS) ~ riskgrp * Post.Surgical.Treatment + Sex + Stage2 + age + Histology.type,
data = preval.dat2)
fit.preval.inter
fit.train.inter <- coxph(Surv(DSS.time, DSS) ~ riskgrp * Post.Surgical.Treatment + Sex + Stage2 + age + Histology.type,
data = cldat)
fit.train.inter
confint(fit.train)
fit.train
exp(fit.train$coefficients[1])
confint(fit.train)[1, ]
pCI <- function(x) {
sprintf("%.2f to %.2f", x[1], x[2])
}
pCI(confint(fit.train)[1, ])
c(exp(fit.train$coefficients[1]), pCI(exp(confint(fit.train)[1, ])))
coefficients(fit.train)
summary(fit.train)
summary(fit.train)$coefficients
myP <- function(x){
ifelse(x < .001, "< 0.001", paste(round(x, 3)))
}
data.frame(Comparison = "High Risk/Low Risk", `Hazard Ratio` = round(exp(fit.train$coefficients[1]), 2),
`95\% CI` = pCI(exp(confint(fit.train)[1, ])), `Adjusted p` = myP(summary(fit.train)$coefficients[1, 5]))
data.frame(Comparison = "High Risk/Low Risk", `Hazard Ratio` = round(exp(fit.train$coefficients[1]), 2),
`95\\% CI` = pCI(exp(confint(fit.train)[1, ])), `Adjusted p` = myP(summary(fit.train)$coefficients[1, 5]))
data.frame(Comparison = "High Risk/Low Risk", `Hazard Ratio` = round(exp(fit.train$coefficients[1]), 2),
`95\\% CI` = pCI(exp(confint(fit.train)[1, ])), `Adjusted p` = myP(summary(fit.train)$coefficients[1, 5]),
check.names = FALSE)
HRmary <- data.frame(Comparison = "High Risk/Low Risk", `Hazard Ratio` = round(exp(fit.train$coefficients[1]), 2),
`95\\% CI` = pCI(exp(confint(fit.train)[1, ])), `Adjusted p` = myP(summary(fit.train)$coefficients[1, 5]),
check.names = FALSE)
fit.train.inter$coefficients
HRmary <- data.frame(Comparison = "High Risk/Low Risk", `Hazard Ratio` = round(exp(fit.train$coefficients[1]), 2),
`95\\% CI` = pCI(exp(confint(fit.train)[1, ])), `Adjusted p` = myP(summary(fit.train)$coefficients[1, 5]),
check.names = FALSE)
rbind(HRmary, c("Trt/Risk interaction", round(exp(fit.train.inter$coefficients[8]), 2),
pCI(exp(confint(fit.train.inter[8, ]))),
myP(summary(fit.train.inter)$coefficients[8, 5])))
rbind(HRmary, c("Trt/Risk interaction", round(exp(fit.train.inter$coefficients[8]), 2),
pCI(exp(confint(fit.train.inter)[8, ])),
myP(summary(fit.train.inter)$coefficients[8, 5])))
HRmary <- data.frame(Comparison = "High Risk/Low Risk", `Hazard Ratio` = round(exp(fit.train$coefficients[1]), 2),
`95\\% CI` = pCI(exp(confint(fit.train)[1, ])), `Adjusted p` = myP(summary(fit.train)$coefficients[1, 5]),
check.names = FALSE, stringsAsFactors = FALSE)
rbind(HRmary, c("Trt/Risk interaction", round(exp(fit.train.inter$coefficients[8]), 2),
pCI(exp(confint(fit.train.inter)[8, ])),
myP(summary(fit.train.inter)$coefficients[8, 5])))
HRmary <- rbind(HRmary, c("High Risk vs Low Risk", round(exp(fit.preval$coefficients[1]), 2),
pCI(exp(confint(fit.preval)[1, ])),
myP(summary(fit.preval)$coefficients[1, 5])),
c("Trt/Risk interaction", round(exp(fit.preval.inter$coefficients[8]), 2),
pCI(exp(confint(fit.preval.inter)[8, ])),
myP(summary(fit.preval.inter)$coefficients[8, 5])))
HRmary
HRmary <- data.frame(Comparison = "High Risk vs Low Risk", `Hazard Ratio` = round(exp(fit.train$coefficients[1]), 2),
`95\\% CI` = pCI(exp(confint(fit.train)[1, ])), `Adjusted p` = myP(summary(fit.train)$coefficients[1, 5]),
check.names = FALSE, stringsAsFactors = FALSE)
HRmary <- rbind(HRmary, c("Trt/Risk interaction", round(exp(fit.train.inter$coefficients[8]), 2),
pCI(exp(confint(fit.train.inter)[8, ])),
myP(summary(fit.train.inter)$coefficients[8, 5])))
HRmary <- rbind(HRmary, c("High Risk vs Low Risk", round(exp(fit.preval$coefficients[1]), 2),
pCI(exp(confint(fit.preval)[1, ])),
myP(summary(fit.preval)$coefficients[1, 5])),
c("Trt/Risk interaction", round(exp(fit.preval.inter$coefficients[8]), 2),
pCI(exp(confint(fit.preval.inter)[8, ])),
myP(summary(fit.preval.inter)$coefficients[8, 5])))
HRmary
library(xtable)
?xtable
print(xtable(HRmary), add.to.row = list(pos = c(0, 2), command = c("\\multicolumn{4}{c}{Partial Resubsitution}",
"\\multicolumn{4}{c}{Pre-validated}")))
print(xtable(HRmary), add.to.row = list(pos = list(0, 2), command = c("\\multicolumn{4}{c}{Partial Resubsitution}",
"\\multicolumn{4}{c}{Pre-validated}")))
HRmary <- data.frame(Comparison = "High Risk vs Low Risk", `Hazard Ratio` = round(exp(fit.train$coefficients[1]), 1),
`95% CI` = pCI(exp(confint(fit.train)[1, ])), `Adjusted p` = myP(summary(fit.train)$coefficients[1, 5]),
check.names = FALSE, stringsAsFactors = FALSE)
HRmary <- rbind(HRmary, c("Trt/Risk interaction", round(exp(fit.train.inter$coefficients[8]), 1),
pCI(exp(confint(fit.train.inter)[8, ])),
myP(summary(fit.train.inter)$coefficients[8, 5])))
HRmary <- rbind(HRmary, c("High Risk vs Low Risk", round(exp(fit.preval$coefficients[1]), 1),
pCI(exp(confint(fit.preval)[1, ])),
myP(summary(fit.preval)$coefficients[1, 5])),
c("Trt/Risk interaction", round(exp(fit.preval.inter$coefficients[8]), 1),
pCI(exp(confint(fit.preval.inter)[8, ])),
myP(summary(fit.preval.inter)$coefficients[8, 5])))
rownames(HRmary) <- NULL
library(xtable)
print(xtable(HRmary), add.to.row = list(pos = list(0, 2), command = c("\\multicolumn{4}{c}{Partial Resubsitution}",
"\\multicolumn{4}{c}{Pre-validated}")))
print(xtable(HRmary), add.to.row = list(pos = list(0, 2), command = c("\\multicolumn{4}{c}{Partial Resubsitution}",
"\\multicolumn{4}{c}{Pre-validated}")), include.rownames = FALSE)
library(xtable)
print(xtable(HRmary), add.to.row = list(pos = list(0, 2), command = c("\\hline \\multicolumn{4}{c}{Partial Resubsitution} \\\\ \n",
"\\multicolumn{4}{c}{Pre-validated} \\hline \n")),
include.rownames = FALSE, timestamp = FALSE)
c("\\hline \\multicolumn{4}{c}{Partial Resubsitution} \\\\ \n",
"\\multicolumn{4}{c}{Pre-validated} \\hline \n")
HRmary
xtable(HRmary)
print(xtable(HRmary), add.to.row = list(pos = list(0, 2), command = c("\\hline \\multicolumn{4}{c}{Partial Resubsitution} \\\\ \n",
"\\multicolumn{4}{c}{Pre-validated} \\hline \n")),
include.rownames = FALSE, timestamp = FALSE)
list(pos = list(0, 2), command = c("\\hline \\multicolumn{4}{c}{Partial Resubsitution} \\\\ \n",
"\\multicolumn{4}{c}{Pre-validated} \\hline \n"))
print(xtable(HRmary), add.to.row = list(pos = list(0, 2), command = c("\\hline \\multicolumn{4}{c}{Partial Resubsitution} \\\\ \n",
"\\multicolumn{4}{c}{Pre-validated} \\hline \n")))
print(xtable(HRmary), add.to.row = list(pos = list(0, 2), command = c("\\hline \\multicolumn{4}{c}{Partial Resubsitution} \\\\ \n",
"\\multicolumn{4}{c}{Pre-validated} \\hline \n")), comment = FALSE, timestamp = FALSE)
print(xtable(HRmary), add.to.row = list(pos = list(0, 2), command = c("\\hline \\multicolumn{4}{c}{Partial Resubsitution} \\\\ \n",
"\\multicolumn{4}{c}{Pre-validated} \\hline \n")), comment = FALSE, timestamp = FALSE, include.rownames = FALSE)
?kable
HRmary <- cbind(Method = c("Partial Resubstitution", "", "Prevalidation", ""))
kable(HRmary, caption = "Hazard ratios and 95% confidence intervals from separate Cox regression models that adjust for tumor histologic subtype, stages, age, and sex. Rows labeled 'High risk vs low risk' show the hazard ratio for the signature-based risk group comparison. The rows labeled 'Trt/Risk interaction' show the hazard ratio for the interaction term of treatment by signature-based risk group. The partial substitution estimates are dramatically optimistically biased. ")
HRmary <- cbind(Method = c("Partial Resubstitution", "", "Prevalidation", ""), HRmary)
kable(HRmary, caption = "Hazard ratios and 95% confidence intervals from separate Cox regression models that adjust for tumor histologic subtype, stages, age, and sex. Rows labeled 'High risk vs low risk' show the hazard ratio for the signature-based risk group comparison. The rows labeled 'Trt/Risk interaction' show the hazard ratio for the interaction term of treatment by signature-based risk group. The partial substitution estimates are dramatically optimistically biased. ")
HRmary <- data.frame(Comparison = "High Risk vs Low Risk", `Hazard Ratio` = round(exp(fit.train$coefficients[1]), 1),
`95% CI` = pCI(exp(confint(fit.train)[1, ])), `Adjusted p` = myP(summary(fit.train)$coefficients[1, 5]),
check.names = FALSE, stringsAsFactors = FALSE)
HRmary <- rbind(HRmary, c("Trt/Risk interaction", round(exp(fit.train.inter$coefficients[8]), 1),
pCI(exp(confint(fit.train.inter)[8, ])),
myP(summary(fit.train.inter)$coefficients[8, 5])))
HRmary <- rbind(HRmary, c("High Risk vs Low Risk", round(exp(fit.preval$coefficients[1]), 1),
pCI(exp(confint(fit.preval)[1, ])),
myP(summary(fit.preval)$coefficients[1, 5])),
c("Trt/Risk interaction", round(exp(fit.preval.inter$coefficients[8]), 1),
pCI(exp(confint(fit.preval.inter)[8, ])),
myP(summary(fit.preval.inter)$coefficients[8, 5])))
rownames(HRmary) <- NULL
HRmary <- cbind(Method = c("Partial Resubstitution", "", "Prevalidation", ""), HRmary)
kable(HRmary, caption = "Hazard ratios and 95% confidence intervals from separate Cox regression models that adjust for tumor histologic subtype, stages, age, and sex. Rows labeled 'High risk vs low risk' show the hazard ratio for the signature-based risk group comparison. The rows labeled 'Trt/Risk interaction' show the hazard ratio for the interaction term of treatment by signature-based risk group. The partial substitution estimates are dramatically optimistically biased. ")
